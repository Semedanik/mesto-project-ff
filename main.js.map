{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["const cardTemplate = document.querySelector(\"#card-template\").content;\n\nexport function createCard(\n  item,\n  userId,\n  deleteCard,\n  openImagePopup,\n  toggleLike\n) {\n  const cardElement = cardTemplate.cloneNode(true);\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCount = cardElement.querySelector(\".card__like-count\");\n\n  cardImage.src = item.link;\n  cardImage.alt = item.name;\n  cardTitle.textContent = item.name;\n  likeCount.textContent = item.likes.length;\n\n  // Set the data-card-id attribute\n  cardElement.firstElementChild.setAttribute(\"data-card-id\", item._id);\n\n  if (item.owner._id === userId) {\n    deleteButton.style.display = \"block\";\n  } else {\n    deleteButton.style.display = \"none\";\n  }\n\n  deleteButton.addEventListener(\"click\", () => deleteCard(item._id));\n\n  cardImage.addEventListener(\"click\", () =>\n    openImagePopup(item.link, item.name)\n  );\n\n  likeButton.addEventListener(\"click\", () =>\n    toggleLike(item._id, likeButton, likeCount)\n  );\n\n  if (item.likes.some((like) => like._id === userId)) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  return cardElement;\n}\n\nexport function deleteCard(cardId) {\n  return fetch(\n    `https://mesto.nomoreparties.co/v1/wff-cohort-24/cards/${cardId}`,\n    {\n      method: \"DELETE\",\n      headers: {\n        authorization: \"fe092b0c-102d-4587-92ce-49a4ec67b845\",\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  ).then((res) => {\n    if (res.ok) {\n      const listItem = document.querySelector(`[data-card-id=\"${cardId}\"]`);\n      if (listItem) {\n        listItem.remove();\n      } else {\n        console.error(`Card with ID ${cardId} not found in the DOM.`);\n      }\n    }\n    return res.json();\n  });\n}\n\nexport function likeCard(cardId) {\n  return fetch(\n    `https://mesto.nomoreparties.co/v1/wff-cohort-24/cards/likes/${cardId}`,\n    {\n      method: \"PUT\",\n      headers: {\n        authorization: \"fe092b0c-102d-4587-92ce-49a4ec67b845\",\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  ).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.statusText);\n  });\n}\n\nexport function dislikeCard(cardId) {\n  return fetch(\n    `https://mesto.nomoreparties.co/v1/wff-cohort-24/cards/likes/${cardId}`,\n    {\n      method: \"DELETE\",\n      headers: {\n        authorization: \"fe092b0c-102d-4587-92ce-49a4ec67b845\",\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  ).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.statusText);\n  });\n}\n\nexport function toggleLike(cardId, likeButton, likeCount) {\n  if (likeButton.classList.contains(\"card__like-button_is-active\")) {\n    dislikeCard(cardId)\n      .then((card) => {\n        likeButton.classList.remove(\"card__like-button_is-active\");\n        likeCount.textContent = card.likes.length;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  } else {\n    likeCard(cardId)\n      .then((card) => {\n        likeButton.classList.add(\"card__like-button_is-active\");\n        likeCount.textContent = card.likes.length;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n}\n","export function openModal(elem) {\n  elem.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closeByEscape);\n  document.addEventListener(\"click\", closeByOverlay);\n}\n\nexport function closeModal(event) {\n  const popup = event.target.closest(\".popup\");\n  if (popup) {\n    popup.classList.remove(\"popup_is-opened\");\n  }\n  document.removeEventListener(\"keydown\", closeByEscape);\n  document.removeEventListener(\"click\", closeByOverlay);\n}\n\nexport function closeByEscape(evt) {\n  if (evt.key === \"Escape\") {\n    const openedPopup = document.querySelector(\".popup_is-opened\");\n    if (openedPopup) {\n      closeModal({ target: openedPopup });\n    }\n  }\n}\n\nfunction closeByOverlay(event) {\n  if (event.target.classList.contains(\"popup\")) {\n    const popup = event.target.closest(\".popup\");\n    if (popup) {\n      closeModal({ target: popup });\n    }\n  }\n}\n\n","// Функция для включения валидации форм\nexport function enableValidation(config) {\n  const forms = document.querySelectorAll(config.formSelector);\n\n  forms.forEach((form) => {\n    setEventListeners(form, config);\n  });\n}\n\n// Функция для установки обработчиков событий на форму\nfunction setEventListeners(form, config) {\n  const inputList = Array.from(form.querySelectorAll(config.inputSelector));\n  const buttonElement = form.querySelector(config.submitButtonSelector);\n\n  toggleButtonState(inputList, buttonElement, config);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', () => {\n      checkInputValidity(form, inputElement, config);\n      toggleButtonState(inputList, buttonElement, config);\n    });\n  });\n\n  form.addEventListener('reset', () => {\n    setTimeout(() => {\n      toggleButtonState(inputList, buttonElement, config);\n    }, 0);\n  });\n}\n\n// Функция для проверки валидности поля ввода\nfunction checkInputValidity(form, inputElement, config) {\n  const errorElement = form.querySelector(`.${inputElement.id}-error`);\n\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(form, inputElement, errorElement, config);\n  } else {\n    hideInputError(form, inputElement, errorElement, config);\n  }\n}\n\n// Функция для показа ошибки валидации\nfunction showInputError(form, inputElement, errorElement, config) {\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.textContent = inputElement.validationMessage;\n  errorElement.classList.add(config.errorClass);\n}\n\n// Функция для скрытия ошибки валидации\nfunction hideInputError(form, inputElement, errorElement, config) {\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.classList.remove(config.errorClass);\n  errorElement.textContent = '';\n}\n\n// Функция для переключения состояния кнопки\nfunction toggleButtonState(inputList, buttonElement, config) {\n  const hasInvalidInput = inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n\n  if (hasInvalidInput) {\n    buttonElement.classList.add(config.inactiveButtonClass);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(config.inactiveButtonClass);\n    buttonElement.disabled = false;\n  }\n}\n\n// Функция для очистки ошибок валидации\nexport function clearValidation(form, config) {\n  const inputList = Array.from(form.querySelectorAll(config.inputSelector));\n  const buttonElement = form.querySelector(config.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    const errorElement = form.querySelector(`.${inputElement.id}-error`);\n    hideInputError(form, inputElement, errorElement, config);\n  });\n\n  toggleButtonState(inputList, buttonElement, config);\n}\n","const config = {\n  baseUrl: \"https://mesto.nomoreparties.co/v1/wff-cohort-24\",\n  headers: {\n    authorization: \"fe092b0c-102d-4587-92ce-49a4ec67b845\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const getUserInfo = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const getInitialCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const editProfile = (name, about) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about,\n    }),\n  }).then(checkResponse);\n};\n\nexport const addCard = (name, link) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link,\n    }),\n  }).then(checkResponse);\n};\n\nexport const deleteCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const likeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"PUT\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const dislikeCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: \"DELETE\",\n    headers: config.headers,\n  }).then(checkResponse);\n};\n\nexport const updateAvatar = (avatar) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatar,\n    }),\n  }).then(checkResponse);\n};\n","import \"../pages/index.css\";\nimport { createCard, deleteCard, toggleLike } from \"./card.js\";\nimport { openModal, closeModal } from \"./modal.js\";\nimport { enableValidation, clearValidation } from \"./validation.js\";\nimport {\n  getUserInfo,\n  getInitialCards,\n  editProfile,\n  addCard,\n  updateAvatar,\n  likeCard,\n  dislikeCard,\n} from \"./api.js\";\n\n// DOM узлы\nconst placesContainer = document.querySelector(\".places__list\");\n\nconst popupEdit = document.querySelector(\".popup_type_edit\");\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\nconst popupNewImage = document.querySelector(\".popup_type_image\");\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\n\nconst btnEdit = document.querySelector(\".profile__edit-button\");\nconst btnAdd = document.querySelector(\".profile__add-button\");\nconst btnCloses = document.querySelectorAll(\".popup__close\");\n\nconst popupImage = popupNewImage.querySelector(\".popup__image\");\nconst popupCaption = popupNewImage.querySelector(\".popup__caption\");\n\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst profileAvatar = document.querySelector(\".profile__image\");\n\nconst profileForm = document.querySelector(\".popup__form[name='edit-profile']\");\nconst nameInput = profileForm.elements.name;\nconst jobInput = profileForm.elements.description;\n\nconst placeForm = document.querySelector(\".popup__form[name='new-place']\");\nconst avatarForm = document.querySelector(\".popup__form[name='avatar-form']\");\n\n// Добавить обработчик событий для каждой кнопки\nbtnCloses.forEach((btnClose) => {\n  btnClose.addEventListener(\"click\", (event) => closeModal(event));\n});\n\n// Обработчик событий для формы добавления новой карточки\nplaceForm.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  const placeName = placeForm.elements[\"place-name\"].value;\n  const placeLink = placeForm.elements[\"link\"].value;\n\n  const submitButton = placeForm.querySelector(\".popup__button\");\n  submitButton.textContent = \"Сохранение...\";\n\n  addCard(placeName, placeLink)\n    .then((newCard) => {\n      const cardElement = createCard(\n        newCard,\n        userId,\n        deleteCard,\n        openImagePopup,\n        toggleLike\n      );\n      placesContainer.prepend(cardElement);\n      closeModal({ target: popupNewCard });\n      placeForm.reset();\n      clearValidation(placeForm, validationConfig);\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    .finally(() => {\n      submitButton.textContent = \"Сохранить\";\n    });\n});\n\n// Обработчик событий для кнопок редактирования и добавления\nbtnEdit.addEventListener(\"click\", () => {\n  fillProfileInputs();\n  openModal(popupEdit);\n  clearValidation(profileForm, validationConfig);\n});\nbtnAdd.addEventListener(\"click\", () => openModal(popupNewCard));\n\n// Функция для открытия попапа с изображением\nfunction openImagePopup(link, name) {\n  popupImage.src = link;\n  popupImage.alt = name;\n  popupCaption.textContent = name;\n\n  openModal(popupNewImage);\n}\n\n// Функция заправления профиля\nfunction fillProfileInputs() {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n}\n\n// Вывести карточки на страницу\nfunction renderCards(cards, userId) {\n  cards.forEach((item) => {\n    const newCard = createCard(\n      item,\n      userId,\n      deleteCard,\n      openImagePopup,\n      toggleLike\n    );\n    placesContainer.append(newCard);\n  });\n}\n\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  const nameInputValue = nameInput.value;\n  const jobInputValue = jobInput.value;\n\n  const submitButton = profileForm.querySelector(\".popup__button\");\n  submitButton.textContent = \"Сохранение...\";\n\n  editProfile(nameInputValue, jobInputValue)\n    .then((userData) => {\n      profileTitle.textContent = userData.name;\n      profileDescription.textContent = userData.about;\n      closeModal({ target: popupEdit });\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    .finally(() => {\n      submitButton.textContent = \"Сохранить\";\n    });\n}\n\nprofileForm.addEventListener(\"submit\", handleProfileFormSubmit);\n\n// Обработчик событий для кнопки редактирования аватара\nconst profileAvatarEditButton = document.querySelector(\n  \".profile__edit-avatar-button\"\n);\n\nprofileAvatarEditButton.addEventListener(\"click\", () => {\n  openModal(popupAvatar);\n  clearValidation(avatarForm, validationConfig);\n});\n\n// Функция для проверки URL на изображение (опционально)\nfunction isValidImageUrl(url) {\n  return fetch(url, { method: \"HEAD\" })\n    .then((response) => {\n      if (\n        response.ok &&\n        response.headers.get(\"content-type\").startsWith(\"image/\")\n      ) {\n        return true;\n      }\n      throw new Error(\"Invalid image URL\");\n    })\n    .catch((err) => {\n      console.error(err);\n      return false;\n    });\n}\n\n// Обработчик событий для формы обновления аватара\navatarForm.addEventListener(\"submit\", async (evt) => {\n  evt.preventDefault();\n  const avatarLink = avatarForm.elements.avatar.value;\n\n  const isValid = await isValidImageUrl(avatarLink);\n  if (!isValid) {\n    // Показать ошибку пользователю\n    const errorElement = avatarForm.querySelector(\".avatar-error\");\n    errorElement.textContent = \"Неверный URL изображения\";\n    return;\n  }\n\n  const submitButton = avatarForm.querySelector(\".popup__button\");\n  submitButton.textContent = \"Сохранение...\";\n\n  updateAvatar(avatarLink)\n    .then((userData) => {\n      profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\n      closeModal({ target: popupAvatar });\n      avatarForm.reset();\n    })\n    .catch((err) => {\n      console.error(err);\n    })\n    .finally(() => {\n      submitButton.textContent = \"Сохранить\";\n    });\n});\n\n// Настройки валидации\nconst validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\n// Включение валидации\nenableValidation(validationConfig);\n\n// Загрузка данных пользователя и карточек с сервера\nlet userId;\nPromise.all([getUserInfo(), getInitialCards()])\n  .then(([userData, cards]) => {\n    profileTitle.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\n    userId = userData._id;\n    renderCards(cards, userId);\n  })\n  .catch((err) => {\n    console.error(err);\n  });\n"],"names":["cardTemplate","document","querySelector","content","createCard","item","userId","deleteCard","openImagePopup","toggleLike","cardElement","cloneNode","cardImage","cardTitle","deleteButton","likeButton","likeCount","src","link","alt","name","textContent","likes","length","firstElementChild","setAttribute","_id","owner","style","display","addEventListener","some","like","classList","add","cardId","fetch","concat","method","headers","authorization","then","res","ok","listItem","remove","console","error","json","contains","Promise","reject","statusText","dislikeCard","card","catch","err","likeCard","openModal","elem","closeByEscape","closeByOverlay","closeModal","event","popup","target","closest","removeEventListener","evt","key","openedPopup","hideInputError","form","inputElement","errorElement","config","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","id","baseUrl","checkResponse","status","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","placesContainer","popupEdit","popupNewCard","popupNewImage","popupAvatar","btnEdit","btnAdd","btnCloses","popupImage","popupCaption","profileTitle","profileDescription","profileAvatar","profileForm","nameInput","elements","jobInput","description","placeForm","avatarForm","btnClose","preventDefault","placeName","placeLink","submitButton","body","JSON","stringify","newCard","prepend","validationConfig","finally","about","nameInputValue","jobInputValue","userData","_ref","_callee","avatarLink","_context","avatar","response","get","startsWith","backgroundImage","arguments","apply","_next","_throw","_x","formSelector","patternMismatch","setCustomValidity","dataset","errorMessage","validationMessage","showInputError","checkInputValidity","setTimeout","setEventListeners","enableValidation","all","_ref2","_ref3","cards","append","renderCards"],"sourceRoot":""}